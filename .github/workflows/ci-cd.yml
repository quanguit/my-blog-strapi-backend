name: CI for Strapi - Build and Publish to GitHub Package Registry

on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - master

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Strapi application
        run: yarn build

  # Docker Build & Push to GitHub Container Registry
  docker_build:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Build and Push Docker image to GitHub Package Registry
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/my-blog-backend:latest
          file: ./Dockerfile.prod

  # Deploy job (optional, if you want to deploy after building)
  deploy:
    runs-on: ubuntu-latest
    needs: docker_build
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: SSH into VPS and Deploy Strapi
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          port: 22
          script: |
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            cd ${{ secrets.PROJECT_PATH }}
            docker compose down
            docker pull ghcr.io/${{ github.repository_owner }}/my-blog-backend:latest
            docker compose up -d
            docker image prune -f
